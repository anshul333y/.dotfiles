#!/bin/bash

WALLPAPER_DIR="$HOME/Pictures/Wallpapers"

# Use argument as wallpaper if provided, otherwise pick a random one
if [ -n "$1" ]; then
    WALLPAPER="$1"
else
    WALLPAPER=$(find "$WALLPAPER_DIR" -type f \( -iname "*.jpg" -o -iname "*.png" -o -iname "*.jpeg" \) | shuf -n 1)
fi

# Check if the wallpaper file exists
if [ ! -f "$WALLPAPER" ]; then
    echo "Wallpaper not found: $WALLPAPER"
    exit 1
fi

# Generate colors with pywal
wal -i "$WALLPAPER" || {
    echo "pywal failed"
    exit 1
}

# Set wallpaper with hyprpaper
CONFIG="$HOME/.cache/wal/hyprpaper.conf"
cat >"$CONFIG" <<EOF
preload = $WALLPAPER
wallpaper = eDP-1,$WALLPAPER
EOF

pkill hyprpaper
sleep 0.3
nohup hyprpaper -c "$CONFIG" >/dev/null 2>&1 &

# Restart waybar cleanly
pkill waybar
(sleep 0.5 && waybar) >/dev/null 2>&1 &

# Apply pywal color sequences for terminals
[[ -f "$HOME/.cache/wal/sequences" ]] && cat "$HOME/.cache/wal/sequences"

# Update Hyprland border colors from pywal
HYPR_COLORS="$HOME/.cache/wal/hyprcolors.conf"

# Load pywal colors
source "$HOME/.cache/wal/colors.sh"

# Compose border colors with alpha and gradient angle
ACTIVE_ALPHA="ff"
INACTIVE_ALPHA="aa"
ANGLE="45deg" # Angle for gradient

# Ensure color values are in correct format (strip leading '#', if present)
active_hex="${color4#\#}${ACTIVE_ALPHA}"
inactive_hex="${color0#\#}${INACTIVE_ALPHA}"

# Prepare rgba color strings (with hex values and angle)
ACTIVE_BORDER="rgba(${active_hex})"
INACTIVE_BORDER="rgba(${inactive_hex})"

# Combine into the desired format
cat >"$HYPR_COLORS" <<EOF
general {
  col.active_border = $ACTIVE_BORDER $ACTIVE_BORDER $ANGLE
  col.inactive_border = $INACTIVE_BORDER
}
EOF

# Reload Hyprland config
hyprctl reload
