#!/bin/bash

# anshul333y's hyprstyle script

WALLPAPER_DIR="$HOME/pics/wall"

# Use argument as wallpaper if provided, otherwise pick a random one
if [ -n "$1" ]; then
  WALLPAPER="$1"
else
  WALLPAPER=$(find "$WALLPAPER_DIR" -type f \( -iname "*.jpg" -o -iname "*.png" -o -iname "*.jpeg" \) | shuf -n 1)
fi

# Check if the wallpaper file exists
if [ ! -f "$WALLPAPER" ]; then
  echo "Wallpaper not found: $WALLPAPER"
  exit 1
fi

# Pywal
wal -i "$WALLPAPER" || {
  echo "pywal failed"
  exit 1
}

# Hyprpaper
CONFIG="$HOME/.config/hypr/hyprpaper.conf"

cat >"$CONFIG" <<EOF
# AUTO-GENERATED hyprpaper.conf from hyprstyle

preload = $WALLPAPER
wallpaper = eDP-1,$WALLPAPER
EOF

pkill hyprpaper
sleep 0.3
nohup hyprpaper -c "$CONFIG" >/dev/null 2>&1 &

# Waybar
pkill waybar
(sleep 0.5 && waybar) >/dev/null 2>&1 &

# Hyprland
HYPR_COLORS="$HOME/.config/hypr/hyprcolors.conf"

source "$HOME/.cache/wal/colors.sh"

ACTIVE_ALPHA="ff"
INACTIVE_ALPHA="aa"
ANGLE="45deg" # Angle for gradient

active_hex="${color5#\#}${ACTIVE_ALPHA}"
inactive_hex="${color8#\#}${INACTIVE_ALPHA}"

ACTIVE_BORDER="rgba(${active_hex})"
INACTIVE_BORDER="rgba(${inactive_hex})"

cat >"$HYPR_COLORS" <<EOF
# AUTO-GENERATED hyprcolors.conf from hyprstyle

general {
  col.active_border = $ACTIVE_BORDER $ACTIVE_BORDER $ANGLE
  col.inactive_border = $INACTIVE_BORDER
}
EOF

gsettings set org.gnome.desktop.background picture-uri-dark "file://$WALLPAPER"
hyprctl reload

# Hyprlock
HYPRLOCK_CONF="$HOME/.config/hypr/hyprlock.conf"

base="$color0"
surface0="$color8"
text="$color15"
textAlpha="${text:1}120"
mauve="$color5"
mauveAlpha="${mauve:1}120"
red="$color1"
yellow="$color3"
accent="$mauve"
accentAlpha="$mauveAlpha"

font="Maple Mono NF CN"

cat >"$HYPRLOCK_CONF" <<EOF
# AUTO-GENERATED hyprlock.conf from hyprstyle

# GENERAL
general {
    disable_loading_bar = true
    hide_cursor = true
}

# BACKGROUND
background {
    monitor =
    path = $WALLPAPER
    blur_passes = 2
    blur_size = 3
    noise = true
    color = rgba(${base:1:2}, ${base:3:2}, ${base:5:2}, 0.8)
}

# TIME (updates every minute)
label {
    monitor =
    text = cmd[update:60000] date +"%I:%M %p"
    color = $text
    font_size = 90
    font_family = $font
    position = -30, 0
    halign = right
    valign = top
}

# DATE (updates every 12 hours)
label {
    monitor =
    text = cmd[update:43200000] date +"%A, %d %B %Y"
    color = $text
    font_size = 35
    font_family = $font
    position = -30, -150
    halign = right
    valign = top
}

# USER AVATAR
image {
    monitor =
    path = ~/.face
    size = 300
    border_color = $accent
    position = 0, 150
    halign = center
    valign = center
}

# INPUT FIELD
input-field {
    monitor =
    size = 350, 60
    outline_thickness = 4
    dots_size = 0.2
    dots_spacing = 0.2
    dots_center = true
    outer_color = $accent
    inner_color = $surface0
    font_color = $text
    fade_on_empty = false
    placeholder_text = <span foreground="##$textAlpha"><i>ó°Œ¾ Logged in as </i><span foreground="##$accentAlpha">$USER</span></span>
    hide_input = false
    check_color = $accent
    fail_color = $red
    fail_text = <i>\$FAIL <b>(\$ATTEMPTS)</b></i>
    capslock_color = $yellow
    position = 0, -100
    halign = center
    valign = center
}
EOF
